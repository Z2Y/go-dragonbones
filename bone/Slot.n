package bone


type SlotInterface interface {
	wrapper.Slot
	deleteSlot()
	IsSlot()
}

type Slot struct {
	wrapper.Slot
}

func (s *Slot) IsSlot{}

func (s *Slot) deleteSlot() {
	wrapper.DeleteDirectorSlot(s.Slot)
}

func NewSlot() SlotInterface {
	om := &overwrittenMethodsOnSlot{}

	slotFace := wrapper.NewDirectorSlot(om)
	om.slot = slotFace

	slot := &Slot{Slot: slotFace}
	return slot
}

func DeleteSlot(s SlotInterface) {
	s.deleteSlot()
}

type overwrittenMethodsOnSlot struct {
	slot wrapper.Slot
}

func (om *overwrittenMethodsOnSlot) X_initDisplay(value uintptr, isRetain bool) {

}

func (om *overwrittenMethodsOnSlot) X_disposeDisplay(value uintptr, isRetain bool) {

}

func (om *overwrittenMethodsOnSlot) X_onUpdateDisplay(value uintptr, isRetain bool) {

}

func (om *overwrittenMethodsOnSlot) X_addDisplay() {

}

func (om *overwrittenMethodsOnSlot) x_replaceDisplay(value uintptr, isArmatureDisplay bool) {

}

func (om *overwrittenMethodsOnSlot) x_updateZOrder() {

}
